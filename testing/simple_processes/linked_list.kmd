KMD
00000000: EAFFFFFF    ; b main 
00000004:             ; 
00000004:             ; 
00000004:             ; 
00000004:             ; main 
00000004:             ; ; set up linked list with three values 
00000004: E28FD0FE    ;     ADRL SP, Supervisor_Stack_End
00000008: E28DDC03    ; 
0000000C: E3A02000    ;     MOV     R2, #0
00000010: E28F0F52    ;     ADRl    R0, list_start
00000014: E5002000    ;     STR     R2, [R0]
00000018:             ; 
00000018: E28F0F56    ;     ADRL    R0, item1 
0000001C: E3A01001    ;     MOV     R1, #&1
00000020: E5802000    ;     STR     R2, [R0, #pointer_next]
00000024: E5801004    ;     STR     R1, [R0, #proccess_id]
00000028: E5802008    ;     STR     R2, [R0, #context_pointer]
0000002C:             ; 
0000002C: E28F0E15    ;     ADRL    R0, item2 
00000030: E3A01002    ;     MOV     R1, #&2
00000034: E5802000    ;     STR     R2, [R0, #pointer_next]
00000038: E5801004    ;     STR     R1, [R0, #proccess_id]
0000003C: E5802008    ;     STR     R2, [R0, #context_pointer]
00000040:             ; 
00000040: E28F0F52    ;     ADRL    R0, item3 
00000044: E3A01003    ;     MOV     R1, #&3
00000048: E5802000    ;     STR     R2, [R0, #pointer_next]
0000004C: E5801004    ;     STR     R1, [R0, #proccess_id]
00000050: E5802008    ;     STR     R2, [R0, #context_pointer]
00000054:             ; 
00000054: E28F0D05    ;     ADRL    R0, item4 
00000058: E3A01004    ;     MOV     R1, #&4
0000005C: E5802000    ;     STR     R2, [R0, #pointer_next]
00000060: E5801004    ;     STR     R1, [R0, #proccess_id]
00000064: E5802008    ;     STR     R2, [R0, #context_pointer]
00000068:             ; 
00000068: E28F0F4E    ;     ADRL    R0, item5 
0000006C: E3A01005    ;     MOV     R1, #&5
00000070: E5802000    ;     STR     R2, [R0, #pointer_next]
00000074: E5801004    ;     STR     R1, [R0, #proccess_id]
00000078: E5802008    ;     STR     R2, [R0, #context_pointer]
0000007C:             ; 
0000007C: E28F00DC    ;     ADRL    R0, list_start
00000080: E28F10F0    ;     ADRL    R1, item1
00000084: EB000019    ;     BL      add_to_list
00000088:             ;     
00000088: E28F00D0    ;     ADRL    R0, list_start
0000008C: E28F10F0    ;     ADRL    R1, item2
00000090: EB000016    ;     BL      add_to_list
00000094:             ; 
00000094: E28F00C4    ; ADRL    R0, list_start
00000098: E28F10F0    ;     ADRL    R1, item3
0000009C: EB000013    ;     BL      add_to_list   
000000A0:             ; 
000000A0: E28F00B8    ; ADRL    R0, list_start
000000A4: E28F10F0    ;     ADRL    R1, item4
000000A8: EB000010    ;     BL      add_to_list 
000000AC:             ;     
000000AC: E28F00AC    ; ADRL    R0, list_start
000000B0: E28F10F0    ;     ADRL    R1, item5
000000B4: EB00000D    ;     BL      add_to_list 
000000B8: E28F00A0    ; ADRL    R0, list_start
000000BC: E3A01003    ;     MOV R1, #&3
000000C0: EB000003    ;     BL      remove_item
000000C4: E28F0094    ; ADRL    R0, list_start
000000C8: E3A01004    ;     MOV R1, #&4
000000CC: EB00000F    ;     BL      find_item
000000D0:             ; 
000000D0:             ; end 
000000D0: EAFFFFFE    ;     b end 
000000D4:             ; 
000000D4:             ; remove_item
000000D4: E92D4010    ;     PUSH    {R4, LR}
000000D8: EB00000C    ;     BL find_item
000000DC: E5904000    ;     LDR R4, [R0, #pointer_next]
000000E0: E5814000    ;     STR R4, [R1, #pointer_next]
000000E4:             ; 
000000E4:             ;     ; save next pointer in this pointer 
000000E4: E3A04000    ;     MOV R4, #0 
000000E8: E5804000    ;     STR R4, [R0, #pointer_next]
000000EC: E8BD8010    ;     POP     {R4, PC}
000000F0:             ;     
000000F0:             ;     ; find item before it and item after it 
000000F0:             ; 
000000F0:             ;     ; update pointer from before to one after 
000000F0:             ; 
000000F0:             ; ; function to add link 
000000F0:             ; ; R1 is item pointer of item to add 
000000F0:             ; add_to_list 
000000F0: E92D4030    ;     PUSH {R4-R5, LR}
000000F4:             ;     ; get adr for list start
000000F4: E1A04000    ;     MOV R4, R0
000000F8:             ; 
000000F8:             ; add_to_list_loop
000000F8: E5945000    ;     LDR     R5, [R4, #pointer_next] 
000000FC:             ;     ; see if it is null
000000FC: E3550000    ;     CMP R5, #&0 
00000100: 11A04005    ;     MOVNE R4, R5
00000104: 1AFFFFFB    ;     BNE add_to_list_loop
00000108: E5841000    ;     STR     R1, [R4, #pointer_next]
0000010C: E8BD8030    ;     POP {R4-R5, PC}
00000110:             ; 
00000110:             ; ; function to find specific item 
00000110:             ; find_item 
00000110:             ;     ; takes process id desired 
00000110:             ;     ; return in R0, pointer to item, 
00000110:             ;     ; return in R1, pointer to item pointing at desired item
00000110: E92D41F0    ;     PUSH    {R4-R8, LR}
00000114:             ;     ; get start of list 
00000114:             ;     ; get adr for list start
00000114: E1A04000    ;     MOV R4, R0
00000118: E1A05000    ;     MOV R5, R0
0000011C:             ; find_item_search_loop       
0000011C:             ;     ; List is empty 
0000011C: E5946000    ;     LDR R6, [R4, #pointer_next]
00000120: E3560000    ;     CMP R6, #0 ; check if you reached end of line 
00000124: 0A000009    ;     BEQ end_of_list
00000128: E5947004    ;     LDR R7, [R4, #proccess_id]
0000012C: E1570001    ;     CMP R7, R1
00000130: 0A000007    ;     BEQ item_found
00000134: E1A05004    ;     MOV R5, R4
00000138: E1A04006    ;     MOV R4, R6
0000013C:             ;     ; check if item is desired item  
0000013C: EAFFFFF6    ;     B find_item_search_loop   
00000140: E8BD81F0    ;     POP     {R4-R8, PC}   
00000144:             ; 
00000144:             ;     
00000144: E28C0008    ;     ADD     R0, R12, #8
00000148: E9402000    ;     STMFD     R0, {R13}^
0000014C: E8900001    ;     LDMFD     R0, {R0}
00000150:             ; end_of_list
00000150: EAFFFFFE    ;     b end_of_list
00000154:             ; 
00000154:             ; item_found
00000154: E1A00004    ;     MOV R0, R4
00000158: E1A01005    ;     MOV R1, R5
0000015C: E8BD81F0    ;     POP     {R4-R8, PC}   
00000160:             ; list_start defs &16
00000178:             ;     align
00000178:             ; 
00000178:             ; struct 
00000178:             ; pointer_next    word 
00000178:             ; proccess_id     word 
00000178:             ; context_pointer word 
00000178:             ;     struct_align
00000178:             ; 
00000178:             ; 
00000178:             ; item1   defs &C  
00000184:             ; item2   defs &C  
00000190:             ; item3   defs &C  
0000019C:             ; item4   defs &C  
000001A8:             ; item5   defs &C 
000001B4:             ; 
000001B4:             ; 
000001B4:             ; ; Blocks of memeory 
000001B4:             ;     ; Stacks 
000001B4:             ;         Supervisor_Stack_Size EQU &256
000001B4:             ; 
000001B4:             ;         ; Supervisor Stack
000001B4:             ;         Supervisor_Stack_Start  DEFS Supervisor_Stack_Size ; Supervisor Stack
0000040A:             ;         Supervisor_Stack_End
0000040C:             ;             Align
0000040C:             ; 

Symbol Table: Labels
: main                              00000004  Local -- ARM
: end                               000000D0  Local -- ARM
: remove_item                       000000D4  Local -- ARM
: add_to_list                       000000F0  Local -- ARM
: add_to_list_loop                  000000F8  Local -- ARM
: find_item                         00000110  Local -- ARM
: find_item_search_loop             0000011C  Local -- ARM
: end_of_list                       00000150  Local -- ARM
: item_found                        00000154  Local -- ARM
: list_start                        00000160  Local -- ARM
: pointer_next                      00000000  Offset
: proccess_id                       00000004  Offset
: context_pointer                   00000008  Offset
: item1                             00000178  Local -- ARM
: item2                             00000184  Local -- ARM
: item3                             00000190  Local -- ARM
: item4                             0000019C  Local -- ARM
: item5                             000001A8  Local -- ARM
: Supervisor_Stack_Size             00000256  Value
: Supervisor_Stack_Start            000001B4  Local -- ARM
: Supervisor_Stack_End              0000040A  Local -- ARM
